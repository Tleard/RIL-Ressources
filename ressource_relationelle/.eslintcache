[{"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/index.js":"1","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/App.js":"2","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/ProtectedRoute.js":"3","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/auth.js":"4","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Home.js":"5","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Login.js":"6","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Navigation.js":"7","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Categories.js":"8","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Category.js":"9","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Resource.js":"10","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Register.js":"11","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/global.js":"12","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/ResourceCardDetail.js":"13","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/AdminDash.js":"14"},{"size":308,"mtime":1611492277031,"results":"15","hashOfConfig":"16"},{"size":4898,"mtime":1612351415763,"results":"17","hashOfConfig":"16"},{"size":1082,"mtime":1612285704175,"results":"18","hashOfConfig":"16"},{"size":577,"mtime":1612350579411,"results":"19","hashOfConfig":"16"},{"size":1205,"mtime":1612351657466,"results":"20","hashOfConfig":"16"},{"size":2071,"mtime":1612350477728,"results":"21","hashOfConfig":"16"},{"size":3444,"mtime":1612304472716,"results":"22","hashOfConfig":"16"},{"size":2231,"mtime":1612285704175,"results":"23","hashOfConfig":"16"},{"size":3961,"mtime":1612285704179,"results":"24","hashOfConfig":"16"},{"size":2691,"mtime":1612285704179,"results":"25","hashOfConfig":"16"},{"size":7843,"mtime":1612285704179,"results":"26","hashOfConfig":"16"},{"size":69,"mtime":1612289991209,"results":"27","hashOfConfig":"16"},{"size":1200,"mtime":1612285704179,"results":"28","hashOfConfig":"16"},{"size":4984,"mtime":1612356568955,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"19mw015",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/index.js",[],["65","66"],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/App.js",["67"],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/ProtectedRoute.js",["68"],"// We make use of the library react-jwt to check if a token is still valid or not\nimport React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useJwt} from 'react-jwt';\nimport auth from './auth';\n\n// We export a functional component. We will pass Components as a props in the function, it is destructured. \nconst ProtectedRoute = ({component: Component, ...rest}) => {\n    const { decodedToken, isExpired } = useJwt(auth.getToken());\n\n    return (\n        <Route \n            {...rest} \n            render ={props => {\n                if(auth.getToken() !== 'undefined' && !isExpired) {\n                    return <Component {...props}/>;\n                } else {\n                    return ( <Redirect \n                        to={{\n                            pathname: \"login\",\n                            state: {\n                                form: props.location\n                            }\n                        }}\n                    />\n                    )\n                }\n            }}\n        />\n    );\n}\n\nexport default ProtectedRoute;\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/auth.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Home.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Login.js",["69","70"],"import React, {useState} from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport '../global';\nimport auth from '../auth';\nimport './Login.css';\nimport {getRole} from \"../App\";\n\n\nconst Login  = (props) => {\n    const [usernameState, setUsernameState] = useState('');\n    const [passwordState, setPasswordState] = useState('');\n\n    const payload = {\n        username:`${usernameState}`,\n        password:`${passwordState}`\n    }\n\n    function login() {\n        fetch(`${global.api}/log-in`, {\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-type':'application/json'\n            },\n            body: JSON.stringify(payload)\n        })\n        .then(res=>res.json())\n        .then((data)=>{\n\n            storeTokenInLocalStorage(data.token);\n\n            auth.loggedin();\n\n        })\n        .then(() => {\n\n\n            //props.history.push('home');\n            // return <Redirect to=\"home\"/>\n            // !!! The window.location.href is bad. But I couldn't find any fix yet. !!! The page need to be refresh to be logged. \n           window.location.href = \"http://localhost:3000/home\";\n        });\n    }\n\n    // Store in localstorage\n    function storeTokenInLocalStorage(token) {\n        localStorage.removeItem('auth_token');\n        localStorage.setItem('auth_token', JSON.stringify(token));\n    }\n\n\n    return (  \n        <div className=\"login\">\n            <h1>Login</h1>\n            <label>Nom d'utilisateur\n                <input type=\"text\" onChange={(e) => {\n                    setUsernameState(e.target.value);\n                }} />\n            </label>\n            <label>Mot de passe\n                <input type=\"password\" onChange={(e) => {\n                    setPasswordState(e.target.value);               \n                }}/>\n            </label>\n            <button onClick={login}>Submit</button>\n        </div>\n    );\n}\n \nexport default withRouter(Login);","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Navigation.js",["71","72","73","74"],"import React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport auth from '../auth';\nimport { withRouter } from 'react-router-dom';\nimport {getRole} from \"../App\";\n\n\n// Import from MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {getRoles} from \"@testing-library/dom\";\n\nconst Navigation = (props) => {\n\n// MaterialUI logic\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\n\n  const classes = useStyles();\n\n\n\nif (props.role === 'admin') {\n      return (\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                Aide\n              </Typography>\n\n              <Button color=\"inherit\" onClick={() => {\n                auth.loggedout(() => {\n                  console.log('callback in test');\n                    window.location.assign(\"http://localhost:3000/login\");\n                });\n              }}>Logout</Button>\n            </Toolbar>\n          </AppBar>\n      )\n    } else if (props.role === 'user') {\n      return (\n\n          <>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                  <MenuIcon/>\n                </IconButton>\n                <Typography component={Link} to=\"/home\" variant=\"h6\" className={classes.title}>\n                  Accueil\n                </Typography>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                  Fil d'actualité\n                </Typography>\n                <Typography component={Link} to=\"/categories\" variant=\"h6\" className={classes.title}>\n                  Catégories\n                </Typography>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                  Publier\n                </Typography>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                  Aide\n                </Typography>\n\n                  <Button color=\"inherit\" onClick={() => {\n                      auth.loggedout(() => {\n                          console.log('callback in test');\n                          window.location.assign(\"http://localhost:3000/login\");\n                      });\n                  }}>Logout</Button>\n              </Toolbar>\n            </AppBar>\n          </>\n      );\n    }\n    else {\n      return (\n\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon/>\n              </IconButton>\n              <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\n              <Button color=\"inherit\" component={Link} to=\"/register\">S'inscrire</Button>\n            </Toolbar>\n          </AppBar>\n      )\n    }\n\n}\n\nexport default withRouter(Navigation);\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Categories.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Category.js",["75"],"// This compenent contains the resources of ONE chosen category \nimport React from 'react';\nimport auth from '../auth';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\n// MaterialUI import\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n\n// MaterialUI Icon Import\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport ShareIcon from \"@material-ui/icons/Share\"\n\n// MaterialUI Lab \nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nfunction Category(props) {\n  // The category object that we get is used to get the correct resources\n  const { category } = props.location.state;\n\n  const [resources, setResources] = useState([]);\n  const [categoryTitle, setCategoryTitle] = useState([]);\n\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth_token\")) {\n      const getResources = async () => {\n        const resourcesFromServer = await fetchResources();\n        setResources(resourcesFromServer);\n      };\n\n      setCategoryTitle(category.name);\n\n      getResources();\n      \n    }\n  }, []);\n\n  // Fetch Resources\n  const fetchResources = async () => {\n    const res = await fetch(`${global.api}/api/resources/category/${category.name}`, {\n      method: \"get\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${auth.getToken()}`,\n      },\n    });\n    const data = await res.json();\n\n    return data;\n  };\n\n  console.log(resources);\n  \n  return (\n    \n    <>\n      <Typography variant=\"h2\" component=\"h1\" style={{margin:\"4% 0 4% 0\"}}>\n        Ressources pour : {categoryTitle}\n      </Typography>\n      <Grid container spacing={3}>\n          {typeof resources[0] !== \"string\" ?\n              resources.map((resource) => {\n                // To format the Date to dd/mm/YYYY\n                const date = new Date(resource.createdAt);\n                const day = date.getDate();\n                const month = (\"0\" + date.getMonth()).slice(-1) + 1;\n                const year = date.getFullYear();\n\n                return (\n                  <Grid item xs={12}>\n                    <Card variant=\"outlined\">\n                      <CardHeader\n                        title={resource.title}\n                        subheader={`${resource.author.username} - ${day}/${month}/${year}`}\n                        \n                      />\n                      <CardContent>\n                        {resource.description}\n                      </CardContent>\n                      <CardActions style={{justifyContent:'flex-end'}}>\n                        <IconButton aria-label=\"add to favorites\">\n                          <FavoriteIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <ShareIcon />\n                        </IconButton>\n                        <Button size=\"medium\" color=\"primary\">\n                          <Link\n                            key={resource.id}\n                            to={{pathname: \"category/resource\", state: {id: resource.id}}}\n                          >\n                            Consulter\n                          </Link> \n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n                      \n              })\n              : <Alert severity=\"info\">\n                  <AlertTitle>Attention</AlertTitle>\n                  Cette catégorie n'a pas encore de ressource\n                </Alert>\n            }\n      </Grid>\n    </>\n  );\n}\n\nexport default Category\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Resource.js",["76","77","78","79","80","81"],"// Component containing a chosen ressource\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport \"./Resource\"\nimport auth from '../auth'\n\n// MaterialUI import\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n\n// MaterialUI Icon Import\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport ShareIcon from \"@material-ui/icons/Share\"\n\n\nimport ResourceCardDetail from './ResourceCardDetail'\n\nfunction Resource(props) {\n    const {id}  = props.location.state;\n    console.log(id);\n\n    const [resource, setResource] = useState();\n\n    useEffect(() => {\n        if (localStorage.getItem(\"auth_token\")) {\n          const getResources = async () => {\n            const resourcesFromServer = await fetchResource();\n            setResource(resourcesFromServer);\n          };\n    \n          getResources();\n          \n        }\n      }, []);\n\n    // Fetch One Ressource\n    const fetchResource = async () => {\n        const res = await fetch(`${global.api}/api/resources/${id}`, {\n            method: \"get\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-type\": \"application/json\",\n              Authorization: `Bearer ${auth.getToken()}`,\n            },\n        })\n        const data = await res.json();\n    \n        return data;\n    }\n    console.log(resource);\n    //console.log(resource[0].id);\n\n    // To format the Date to dd/mm/YYYY\n    // const date = new Date(resource.createdAt);\n    // const day = date.getDate();\n    // const month = (\"0\" + date.getMonth()).slice(-1) + 1;\n    // const year = date.getFullYear();\n\n    return (\n      <>\n        <h1>This is only ONE resource.</h1>\n        <Card variant=\"outlined\">\n          <CardHeader\n            //title={resource[0].title}\n            // subheader={`${resource.author.username} - ${day}/${month}/${year}`}\n          />\n          {/* <CardContent>{resource[0].description}</CardContent> */}\n          <CardActions style={{ justifyContent: \"flex-end\" }}>\n            <IconButton aria-label=\"add to favorites\">\n              <FavoriteIcon />\n            </IconButton>\n            <IconButton aria-label=\"share\">\n              <ShareIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n\n        {/* <ResourceCardDetail {...resource[0]}/> */}\n      </>\n    );\n}\n\nexport default Resource\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Register.js",["82","83","84","85","86","87","88","89","90","91","92","93"],"import React, { useState, useRef } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\n//import { Container, Button, Form, FormGroup, Label, Input, FormText, Alert } from \"reactstrap\";\nimport \"./Register.css\";\n\n// Material UI Import\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\n// Material UI lab Imprt\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Register = (props) => {\n  const classes = useStyles();\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    watch,\n    control,\n  } = useForm();\n  const { isSubmitting, isSubmitted, isSubmitSuccessful } = formState;\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = (data) => {\n    console.log(data);\n    const payload = {\n      username: `${data.username}`,\n      first_name: `${data.firstName}`,\n      last_name: `${data.lastName}`,\n      email: `${data.email}`,\n      password: `${data.password}`,\n      retyped_password: `${data.retyped_password}`,\n    };\n\n    fetch(`${global.api}/register`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    }).then(() => {\n      props.history.push(\"Login\");\n    });\n  };\n\n  console.log(errors);\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"Prénom\"\n                  autoFocus\n                  inputRef={register({\n                    required: \"Entrez un prénom\",\n                    pattern: {\n                      value: /^([^0-9]*)$/,\n                      message: \"Les chiffes sont interdits\",\n                    },\n                  })}\n                />\n                {errors.firstName && (\n                  <Alert severity=\"warning\">{errors.firstName.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Nom\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  inputRef={register({\n                    required: \"Entrez un nom\",\n                    pattern: {\n                      value: /^([^0-9]*)$/,\n                      message: \"Les chiffes sont interdits\",\n                    },\n                  })}\n                />\n                {errors.lastName && (\n                  <Alert severity=\"warning\">{errors.lastName.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Nom Utilisateur\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  inputRef={register({\n                    required: \"Vous devez entrez votre nom d'utilisateur\",\n                  })}\n                />\n                {errors.username && (\n                  <Alert severity=\"warning\">{errors.username.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  inputRef={register({\n                    required: \"Email obligatoire\",\n                    pattern: {\n                      value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n                      message: \"Email invalide\",\n                    },\n                  })}\n                />\n                {errors.email && (\n                  <Alert severity=\"warning\">{errors.email.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Mot de passe\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  inputRef={register({ required: \"Mot de passe obligatoire\" })}\n                />\n                {errors.password && (\n                  <Alert severity=\"warning\">{errors.password.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"retyped_password\"\n                  label=\"Confirmation mot de passe\"\n                  type=\"password\"\n                  id=\"retyped_password\"\n                  autoComplete=\"current-password\"\n                  inputRef={register({\n                    required: \"Confirmez votre mot de passe\",\n                    validate: (value) =>\n                      value === password.current ||\n                      \"Les mots de passe ne correspondent pas\",\n                  })}\n                />\n                {errors.retyped_password && (\n                  <Alert severity=\"warning\">\n                    {errors.retyped_password.message}\n                  </Alert>\n                )}\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Je m'inscris\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Déjà un compte ? Je me connecte\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/global.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/ResourceCardDetail.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/AdminDash.js",["94","95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":150,"column":10,"nodeType":"103","messageId":"104","endLine":150,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":9,"column":13,"nodeType":"103","messageId":"104","endLine":9,"endColumn":25},{"ruleId":"101","severity":1,"message":"106","line":2,"column":22,"nodeType":"103","messageId":"104","endLine":2,"endColumn":30},{"ruleId":"101","severity":1,"message":"107","line":6,"column":9,"nodeType":"103","messageId":"104","endLine":6,"endColumn":16},{"ruleId":"101","severity":1,"message":"108","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"109","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":35},{"ruleId":"101","severity":1,"message":"107","line":5,"column":9,"nodeType":"103","messageId":"104","endLine":5,"endColumn":16},{"ruleId":"101","severity":1,"message":"110","line":16,"column":9,"nodeType":"103","messageId":"104","endLine":16,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":45,"column":6,"nodeType":"113","endLine":45,"endColumn":8,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"115","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":12},{"ruleId":"101","severity":1,"message":"116","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":19},{"ruleId":"101","severity":1,"message":"117","line":14,"column":8,"nodeType":"103","messageId":"104","endLine":14,"endColumn":18},{"ruleId":"101","severity":1,"message":"118","line":15,"column":8,"nodeType":"103","messageId":"104","endLine":15,"endColumn":14},{"ruleId":"101","severity":1,"message":"119","line":23,"column":8,"nodeType":"103","messageId":"104","endLine":23,"endColumn":26},{"ruleId":"111","severity":1,"message":"120","line":41,"column":10,"nodeType":"113","endLine":41,"endColumn":12,"suggestions":"121"},{"ruleId":"101","severity":1,"message":"109","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"122","line":2,"column":19,"nodeType":"103","messageId":"104","endLine":2,"endColumn":29},{"ruleId":"101","severity":1,"message":"106","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":18},{"ruleId":"101","severity":1,"message":"123","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":24},{"ruleId":"101","severity":1,"message":"124","line":13,"column":8,"nodeType":"103","messageId":"104","endLine":13,"endColumn":16},{"ruleId":"101","severity":1,"message":"125","line":16,"column":8,"nodeType":"103","messageId":"104","endLine":16,"endColumn":11},{"ruleId":"101","severity":1,"message":"126","line":53,"column":5,"nodeType":"103","messageId":"104","endLine":53,"endColumn":13},{"ruleId":"101","severity":1,"message":"127","line":55,"column":5,"nodeType":"103","messageId":"104","endLine":55,"endColumn":12},{"ruleId":"101","severity":1,"message":"128","line":57,"column":11,"nodeType":"103","messageId":"104","endLine":57,"endColumn":23},{"ruleId":"101","severity":1,"message":"129","line":57,"column":25,"nodeType":"103","messageId":"104","endLine":57,"endColumn":36},{"ruleId":"101","severity":1,"message":"130","line":57,"column":38,"nodeType":"103","messageId":"104","endLine":57,"endColumn":56},{"ruleId":"131","severity":1,"message":"132","line":176,"column":36,"nodeType":"133","messageId":"134","endLine":176,"endColumn":37,"suggestions":"135"},{"ruleId":"101","severity":1,"message":"125","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":11},{"ruleId":"101","severity":1,"message":"136","line":7,"column":22,"nodeType":"103","messageId":"104","endLine":7,"endColumn":29},{"ruleId":"101","severity":1,"message":"137","line":36,"column":7,"nodeType":"103","messageId":"104","endLine":36,"endColumn":15},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'decodedToken' is assigned a value but never used.","'Redirect' is defined but never used.","'getRole' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'getRoles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category.name' and 'fetchResources'. Either include them or remove the dependency array.","ArrayExpression",["140"],"'Grid' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'ResourceCardDetail' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchResource'. Either include it or remove the dependency array.",["141"],"'Controller' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'setError' is assigned a value but never used.","'control' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'isSubmitSuccessful' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["142","143"],"'Divider' is defined but never used.","'txtWhite' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"messageId":"148","fix":"149","desc":"150"},{"messageId":"151","fix":"152","desc":"153"},"Update the dependencies array to be: [category.name, fetchResources]",{"range":"154","text":"155"},"Update the dependencies array to be: [fetchResource]",{"range":"156","text":"157"},"removeEscape",{"range":"158","text":"159"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"160","text":"161"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1401,1403],"[category.name, fetchResources]",[1218,1220],"[fetchResource]",[5467,5468],"",[5467,5467],"\\"]