[{"/var/www/dev/RIL-Ressources/ressource_relationelle/src/index.js":"1","/var/www/dev/RIL-Ressources/ressource_relationelle/src/App.js":"2","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Navigation.js":"3","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Home.js":"4","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Categories.js":"5","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Login.js":"6","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Register.js":"7","/var/www/dev/RIL-Ressources/ressource_relationelle/src/ProtectedRoute.js":"8","/var/www/dev/RIL-Ressources/ressource_relationelle/src/auth.js":"9","/var/www/dev/RIL-Ressources/ressource_relationelle/src/global.js":"10","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Category.js":"11","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Resource.js":"12","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/HomeCarousel.js":"13"},{"size":308,"mtime":1610921613212,"results":"14","hashOfConfig":"15"},{"size":1793,"mtime":1612299514456,"results":"16","hashOfConfig":"15"},{"size":2124,"mtime":1612210059639,"results":"17","hashOfConfig":"15"},{"size":2835,"mtime":1612388359456,"results":"18","hashOfConfig":"15"},{"size":2203,"mtime":1612383025842,"results":"19","hashOfConfig":"15"},{"size":1983,"mtime":1612295590646,"results":"20","hashOfConfig":"15"},{"size":7843,"mtime":1612295590658,"results":"21","hashOfConfig":"15"},{"size":1082,"mtime":1612210059623,"results":"22","hashOfConfig":"15"},{"size":568,"mtime":1610921613152,"results":"23","hashOfConfig":"15"},{"size":69,"mtime":1612210059647,"results":"24","hashOfConfig":"15"},{"size":4212,"mtime":1612383025850,"results":"25","hashOfConfig":"15"},{"size":2883,"mtime":1612383025850,"results":"26","hashOfConfig":"15"},{"size":1599,"mtime":1612386034534,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ypsff0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/var/www/dev/RIL-Ressources/ressource_relationelle/src/index.js",[],["62","63"],"/var/www/dev/RIL-Ressources/ressource_relationelle/src/App.js",["64","65","66"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\n// Import that manage the authentification system\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport auth from './auth';\n\n\n// Component that render some View\nimport Navigation from \"./components/Navigation\";\nimport Home from \"./components/Home\";\nimport Categories from \"./components/Categories\";\nimport Category from \"./components/Category\";\nimport Resource from \"./components/Resource\"\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport { BrowserRouter as Router, Switch, Route, withRouter, BrowserRouter } from 'react-router-dom';\n\nimport \"./App.css\";\n\n// Material UI Import\nimport Container from \"@material-ui/core/Container\"\n\n\nfunction App() {\n  \n  return (\n    <>\n      <BrowserRouter>\n        <Router>\n          <Navigation />\n          <Container maxWidth=\"lg\">\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <ProtectedRoute exact path=\"/home\" component={Home} />\n              <ProtectedRoute exact path=\"/categories\" component={Categories} />\n              <ProtectedRoute\n                exact\n                path=\"/categories/category\"\n                component={Category}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/categories/category/resource\"\n                component={Resource}\n              />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Container>\n        </Router>\n      </BrowserRouter>\n    </>\n  );\n}\n\n// Not found component\nfunction NotFound() {\n  return(\n    <div>\n      <h1>Not Found</h1>\n    </div>\n  )\n}\n\nexport default withRouter(App);\n","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Navigation.js",["67"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport auth from '../auth';\nimport { withRouter } from 'react-router-dom';\n\n// Import from MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst Navigation = (props) => {\n\n// MaterialUI logic\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nconst classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography component={Link} to=\"/home\" variant=\"h6\" className={classes.title}>\n            Accueil\n          </Typography>\n          <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n            Fil d'actualité\n          </Typography>\n          <Typography component={Link} to=\"/categories\" variant=\"h6\" className={classes.title}>\n            Catégories\n          </Typography>\n          <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n            Publier\n          </Typography>\n          <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n            Aide\n          </Typography>\n          <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\n          <Button color=\"inherit\" onClick={() => {\n                      auth.loggedout(() => {\n                          console.log('callback in test');\n                          props.history.push('/login');\n                      });\n            }}>Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nexport default withRouter(Navigation);\n","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Home.js",[],"/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Categories.js",[],"/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Login.js",["68"],"import React, {useState} from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport '../global';\nimport auth from '../auth';\nimport './Login.css';\n\n\nconst Login  = (props) => {\n    const [usernameState, setUsernameState] = useState('');\n    const [passwordState, setPasswordState] = useState('');\n\n    const payload = {\n        username:`${usernameState}`,\n        password:`${passwordState}`\n    }\n\n    function login() {\n        fetch(`${global.api}/log-in`, {\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-type':'application/json'\n            },\n            body: JSON.stringify(payload)\n        })\n        .then(res=>res.json())\n        .then((data)=>{\n            storeTokenInLocalStorage(data.token);\n            auth.loggedin();\n        })\n        .then(() => {\n            console.log('then redirect check');\n            //props.history.push('home');\n            // return <Redirect to=\"home\"/>\n            // !!! The window.location.href is bad. But I couldn't find any fix yet. !!! The page need to be refresh to be logged. \n            window.location.href = \"http://localhost:3000/home\";\n        });\n    }\n\n    // Store in localstorage\n    function storeTokenInLocalStorage(token) {\n        localStorage.removeItem('auth_token');\n        localStorage.setItem('auth_token', JSON.stringify(token));\n    }\n\n\n    return (  \n        <div className=\"login\">\n            <h1>Login</h1>\n            <label>Nom d'utilisateur\n                <input type=\"text\" onChange={(e) => {\n                    setUsernameState(e.target.value);\n                }} />\n            </label>\n            <label>Mot de passe\n                <input type=\"password\" onChange={(e) => {\n                    setPasswordState(e.target.value);               \n                }}/>\n            </label>\n            <button onClick={login}>Submit</button>\n        </div>\n    );\n}\n \nexport default withRouter(Login);","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Register.js",["69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { useState, useRef } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\n//import { Container, Button, Form, FormGroup, Label, Input, FormText, Alert } from \"reactstrap\";\nimport \"./Register.css\";\n\n// Material UI Import\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\n// Material UI lab Imprt\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Register = (props) => {\n  const classes = useStyles();\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    watch,\n    control,\n  } = useForm();\n  const { isSubmitting, isSubmitted, isSubmitSuccessful } = formState;\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = (data) => {\n    console.log(data);\n    const payload = {\n      username: `${data.username}`,\n      first_name: `${data.firstName}`,\n      last_name: `${data.lastName}`,\n      email: `${data.email}`,\n      password: `${data.password}`,\n      retyped_password: `${data.retyped_password}`,\n    };\n\n    fetch(`${global.api}/register`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    }).then(() => {\n      props.history.push(\"Login\");\n    });\n  };\n\n  console.log(errors);\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"Prénom\"\n                  autoFocus\n                  inputRef={register({\n                    required: \"Entrez un prénom\",\n                    pattern: {\n                      value: /^([^0-9]*)$/,\n                      message: \"Les chiffes sont interdits\",\n                    },\n                  })}\n                />\n                {errors.firstName && (\n                  <Alert severity=\"warning\">{errors.firstName.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Nom\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  inputRef={register({\n                    required: \"Entrez un nom\",\n                    pattern: {\n                      value: /^([^0-9]*)$/,\n                      message: \"Les chiffes sont interdits\",\n                    },\n                  })}\n                />\n                {errors.lastName && (\n                  <Alert severity=\"warning\">{errors.lastName.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Nom Utilisateur\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  inputRef={register({\n                    required: \"Vous devez entrez votre nom d'utilisateur\",\n                  })}\n                />\n                {errors.username && (\n                  <Alert severity=\"warning\">{errors.username.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  inputRef={register({\n                    required: \"Email obligatoire\",\n                    pattern: {\n                      value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n                      message: \"Email invalide\",\n                    },\n                  })}\n                />\n                {errors.email && (\n                  <Alert severity=\"warning\">{errors.email.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Mot de passe\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  inputRef={register({ required: \"Mot de passe obligatoire\" })}\n                />\n                {errors.password && (\n                  <Alert severity=\"warning\">{errors.password.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"retyped_password\"\n                  label=\"Confirmation mot de passe\"\n                  type=\"password\"\n                  id=\"retyped_password\"\n                  autoComplete=\"current-password\"\n                  inputRef={register({\n                    required: \"Confirmez votre mot de passe\",\n                    validate: (value) =>\n                      value === password.current ||\n                      \"Les mots de passe ne correspondent pas\",\n                  })}\n                />\n                {errors.retyped_password && (\n                  <Alert severity=\"warning\">\n                    {errors.retyped_password.message}\n                  </Alert>\n                )}\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Je m'inscris\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Déjà un compte ? Je me connecte\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n","/var/www/dev/RIL-Ressources/ressource_relationelle/src/ProtectedRoute.js",["81"],"// We make use of the library react-jwt to check if a token is still valid or not\nimport React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useJwt} from 'react-jwt';\nimport auth from './auth';\n\n// We export a functional component. We will pass Components as a props in the function, it is destructured. \nconst ProtectedRoute = ({component: Component, ...rest}) => {\n    const { decodedToken, isExpired } = useJwt(auth.getToken());\n\n    return (\n        <Route \n            {...rest} \n            render ={props => {\n                if(auth.getToken() !== 'undefined' && !isExpired) {\n                    return <Component {...props}/>;\n                } else {\n                    return ( <Redirect \n                        to={{\n                            pathname: \"login\",\n                            state: {\n                                form: props.location\n                            }\n                        }}\n                    />\n                    )\n                }\n            }}\n        />\n    );\n}\n\nexport default ProtectedRoute;\n","/var/www/dev/RIL-Ressources/ressource_relationelle/src/auth.js",[],"/var/www/dev/RIL-Ressources/ressource_relationelle/src/global.js",[],"/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Category.js",["82"],"// This compenent contains the resources of ONE chosen category \nimport React from 'react';\nimport auth from '../auth';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\n// MaterialUI import\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n\n// MaterialUI Icon Import\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport ShareIcon from \"@material-ui/icons/Share\"\nimport ReportIcon from '@material-ui/icons/Report';\n\n// MaterialUI Lab \nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nfunction Category(props) {\n  // The category object that we get is used to get the correct resources\n  const { category } = props.location.state;\n\n  const [resources, setResources] = useState([]);\n  const [categoryTitle, setCategoryTitle] = useState([]);\n\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth_token\")) {\n      const getResources = async () => {\n        const resourcesFromServer = await fetchResources();\n        setResources(resourcesFromServer);\n      };\n\n      setCategoryTitle(category.name);\n\n      getResources();\n      \n    }\n  }, []);\n\n  // Fetch Resources\n  const fetchResources = async () => {\n    const res = await fetch(`${global.api}/api/resources/category/${category.name}`, {\n      method: \"get\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${auth.getToken()}`,\n      },\n    });\n    const data = await res.json();\n\n    return data;\n  };\n  \n  return (\n    \n    <>\n      <Typography variant=\"h2\" component=\"h1\" style={{margin:\"4% 0 4% 0\"}}>\n        Ressources pour : {categoryTitle}\n      </Typography>\n      <Grid container spacing={3}>\n          {typeof resources[0] !== \"string\" ?\n              resources.map((resource) => {\n                // To format the Date to dd/mm/YYYY\n                const date = new Date(resource.createdAt);\n                const day = date.getDate();\n                const month = (\"0\" + date.getMonth()).slice(-1) + 1;\n                const year = date.getFullYear();\n\n                return (\n                  <Grid item xs={12}>\n                    <Card variant=\"outlined\">\n                      <CardHeader\n                        title={resource.title}\n                        subheader={`${resource.author.username} - ${day}/${month}/${year}`}\n                        \n                      />\n                      <CardContent>\n                        {resource.description}\n                      </CardContent>\n                      <CardActions style={{justifyContent:'flex-end'}}>\n                        <IconButton aria-label=\"add to favorites\">\n                          <FavoriteIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"report\">\n                          <ReportIcon />\n                        </IconButton>\n                        <Button size=\"medium\" color=\"primary\">\n                          <Link\n                            key={resource.id}\n                            //to={{pathname: \"category/resource\", state: {id: resource.id}}}\n                            to={{pathname: \"category/resource\", hash:`${resource.id}`}}\n                          >\n                            Consulter\n                          </Link> \n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n                      \n              })\n              : <Alert severity=\"info\">\n                  <AlertTitle>Attention</AlertTitle>\n                  Cette catégorie n'a pas encore de ressource\n                </Alert>\n            }\n      </Grid>\n    </>\n  );\n}\n\nexport default Category\n","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/Resource.js",["83","84","85","86"],"// Component containing a chosen ressource\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport \"./Resource\"\nimport auth from '../auth'\n\n// MaterialUI import\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n\n// MaterialUI Icon Import\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport ShareIcon from \"@material-ui/icons/Share\"\nimport ReportIcon from '@material-ui/icons/Report';\n\nfunction Resource(props) {\n    //const {id}  = props.location.state;\n    const id = props.location.hash.substring(1);\n\n    const [resource, setResource] = useState([]);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"auth_token\")) {\n          const getResource = async () => {\n            const resourceFromServer = await fetchResource();\n            setResource(resourceFromServer);\n          };\n    \n          getResource();\n          \n        }\n      }, []);\n\n    // Fetch One Ressource\n    const fetchResource = async () => {\n        const res = await fetch(`${global.api}/api/resources/${id}`, {\n            method: \"get\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-type\": \"application/json\",\n              Authorization: `Bearer ${auth.getToken()}`,\n            },\n        })\n        const data = await res.json();\n    \n        return data;\n    }\n\n    return (\n      <>\n        <h1>This is only ONE resource.</h1>\n        {resource.map((resource) => {\n          // To format the Date to dd/mm/YYYY\n          const date = new Date(resource.createdAt);\n          const day = date.getDate();\n          const month = (\"0\" + date.getMonth()).slice(-1) + 1;\n          const year = date.getFullYear();\n          return (\n            <Card variant=\"outlined\">\n              <CardHeader\n                key={resource.id}\n                title={resource.title}\n                subheader={`${resource.author.username} - ${day}/${month}/${year}`}\n              />\n              <CardContent>{resource.description}</CardContent>\n              <CardActions style={{ justifyContent: \"flex-end\" }}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"report\">\n                  <ReportIcon />\n                </IconButton>\n              </CardActions>\n            </Card>\n          );\n        })}\n      </>\n    );\n}\n\nexport default Resource\n","/var/www/dev/RIL-Ressources/ressource_relationelle/src/components/HomeCarousel.js",["87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"97","line":2,"column":20,"nodeType":"95","messageId":"96","endLine":2,"endColumn":29},{"ruleId":"93","severity":1,"message":"98","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"99","line":2,"column":22,"nodeType":"95","messageId":"96","endLine":2,"endColumn":30},{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"100","line":2,"column":19,"nodeType":"95","messageId":"96","endLine":2,"endColumn":29},{"ruleId":"93","severity":1,"message":"99","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":18},{"ruleId":"93","severity":1,"message":"101","line":12,"column":8,"nodeType":"95","messageId":"96","endLine":12,"endColumn":24},{"ruleId":"93","severity":1,"message":"102","line":13,"column":8,"nodeType":"95","messageId":"96","endLine":13,"endColumn":16},{"ruleId":"93","severity":1,"message":"103","line":16,"column":8,"nodeType":"95","messageId":"96","endLine":16,"endColumn":11},{"ruleId":"93","severity":1,"message":"104","line":53,"column":5,"nodeType":"95","messageId":"96","endLine":53,"endColumn":13},{"ruleId":"93","severity":1,"message":"105","line":55,"column":5,"nodeType":"95","messageId":"96","endLine":55,"endColumn":12},{"ruleId":"93","severity":1,"message":"106","line":57,"column":11,"nodeType":"95","messageId":"96","endLine":57,"endColumn":23},{"ruleId":"93","severity":1,"message":"107","line":57,"column":25,"nodeType":"95","messageId":"96","endLine":57,"endColumn":36},{"ruleId":"93","severity":1,"message":"108","line":57,"column":38,"nodeType":"95","messageId":"96","endLine":57,"endColumn":56},{"ruleId":"109","severity":1,"message":"110","line":176,"column":36,"nodeType":"111","messageId":"112","endLine":176,"endColumn":37,"suggestions":"113"},{"ruleId":"93","severity":1,"message":"114","line":9,"column":13,"nodeType":"95","messageId":"96","endLine":9,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":46,"column":6,"nodeType":"117","endLine":46,"endColumn":8,"suggestions":"118"},{"ruleId":"93","severity":1,"message":"119","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":12},{"ruleId":"93","severity":1,"message":"120","line":14,"column":8,"nodeType":"95","messageId":"96","endLine":14,"endColumn":18},{"ruleId":"93","severity":1,"message":"121","line":15,"column":8,"nodeType":"95","messageId":"96","endLine":15,"endColumn":14},{"ruleId":"115","severity":1,"message":"122","line":39,"column":10,"nodeType":"117","endLine":39,"endColumn":12,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":45,"column":37,"nodeType":"126","messageId":"127","endLine":45,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":45,"column":61,"nodeType":"126","messageId":"127","endLine":45,"endColumn":62},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'auth' is defined but never used.","'Redirect' is defined but never used.","'Controller' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'setError' is assigned a value but never used.","'control' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'isSubmitSuccessful' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["130","131"],"'decodedToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category.name' and 'fetchResources'. Either include them or remove the dependency array.","ArrayExpression",["132"],"'Grid' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchResource'. Either include it or remove the dependency array.",["133"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"messageId":"134","fix":"135","desc":"136"},{"messageId":"137","fix":"138","desc":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"removeEscape",{"range":"144","text":"145"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"146","text":"147"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [category.name, fetchResources]",{"range":"148","text":"149"},"Update the dependencies array to be: [fetchResource]",{"range":"150","text":"151"},[5467,5468],"",[5467,5467],"\\",[1453,1455],"[category.name, fetchResources]",[1242,1244],"[fetchResource]"]