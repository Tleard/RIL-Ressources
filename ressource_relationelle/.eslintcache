[{"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/index.js":"1","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/App.js":"2","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/ProtectedRoute.js":"3","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/auth.js":"4","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Login.js":"5","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/BlockedResList.js":"6","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Navigation.js":"7","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/BlockedUserList.js":"8","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Home.js":"9","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Register.js":"10","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/CategTools.js":"11","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Categories.js":"12","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Category.js":"13","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Resource.js":"14","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/global.js":"15","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/HomeCarousel.js":"16","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/AdminDash.js":"17","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/userLibraryFunctions.js":"18","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/ResRepList.js":"19","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/UserRepList.js":"20","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/WarnList.js":"21","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Profile.js":"22"},{"size":308,"mtime":1611492277031,"results":"23","hashOfConfig":"24"},{"size":6160,"mtime":1613301885276,"results":"25","hashOfConfig":"24"},{"size":1082,"mtime":1612285704175,"results":"26","hashOfConfig":"24"},{"size":577,"mtime":1612350579411,"results":"27","hashOfConfig":"24"},{"size":2071,"mtime":1612350477728,"results":"28","hashOfConfig":"24"},{"size":4409,"mtime":1613248952170,"results":"29","hashOfConfig":"24"},{"size":3614,"mtime":1612465756269,"results":"30","hashOfConfig":"24"},{"size":3010,"mtime":1612531320594,"results":"31","hashOfConfig":"24"},{"size":9074,"mtime":1613239642596,"results":"32","hashOfConfig":"24"},{"size":7843,"mtime":1612285704179,"results":"33","hashOfConfig":"24"},{"size":6160,"mtime":1612623168723,"results":"34","hashOfConfig":"24"},{"size":2115,"mtime":1612724165324,"results":"35","hashOfConfig":"24"},{"size":4174,"mtime":1612724165324,"results":"36","hashOfConfig":"24"},{"size":9666,"mtime":1613249244250,"results":"37","hashOfConfig":"24"},{"size":69,"mtime":1612289991209,"results":"38","hashOfConfig":"24"},{"size":1599,"mtime":1613239349401,"results":"39","hashOfConfig":"24"},{"size":5410,"mtime":1612719169386,"results":"40","hashOfConfig":"24"},{"size":695,"mtime":1612628207099,"results":"41","hashOfConfig":"24"},{"size":5461,"mtime":1613248098130,"results":"42","hashOfConfig":"24"},{"size":6564,"mtime":1613313016554,"results":"43","hashOfConfig":"24"},{"size":4119,"mtime":1612721845243,"results":"44","hashOfConfig":"24"},{"size":6807,"mtime":1613313105417,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"19mw015",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/index.js",[],["103","104"],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/App.js",["105"],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/ProtectedRoute.js",["106"],"// We make use of the library react-jwt to check if a token is still valid or not\nimport React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useJwt} from 'react-jwt';\nimport auth from './auth';\n\n// We export a functional component. We will pass Components as a props in the function, it is destructured. \nconst ProtectedRoute = ({component: Component, ...rest}) => {\n    const { decodedToken, isExpired } = useJwt(auth.getToken());\n\n    return (\n        <Route \n            {...rest} \n            render ={props => {\n                if(auth.getToken() !== 'undefined' && !isExpired) {\n                    return <Component {...props}/>;\n                } else {\n                    return ( <Redirect \n                        to={{\n                            pathname: \"login\",\n                            state: {\n                                form: props.location\n                            }\n                        }}\n                    />\n                    )\n                }\n            }}\n        />\n    );\n}\n\nexport default ProtectedRoute;\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/auth.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Login.js",["107","108"],"import React, {useState} from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport '../global';\nimport auth from '../auth';\nimport './Login.css';\nimport {getRole} from \"../App\";\n\n\nconst Login  = (props) => {\n    const [usernameState, setUsernameState] = useState('');\n    const [passwordState, setPasswordState] = useState('');\n\n    const payload = {\n        username:`${usernameState}`,\n        password:`${passwordState}`\n    }\n\n    function login() {\n        fetch(`${global.api}/log-in`, {\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-type':'application/json'\n            },\n            body: JSON.stringify(payload)\n        })\n        .then(res=>res.json())\n        .then((data)=>{\n\n            storeTokenInLocalStorage(data.token);\n\n            auth.loggedin();\n\n        })\n        .then(() => {\n\n\n            //props.history.push('home');\n            // return <Redirect to=\"home\"/>\n            // !!! The window.location.href is bad. But I couldn't find any fix yet. !!! The page need to be refresh to be logged. \n           window.location.href = \"http://localhost:3000/home\";\n        });\n    }\n\n    // Store in localstorage\n    function storeTokenInLocalStorage(token) {\n        localStorage.removeItem('auth_token');\n        localStorage.setItem('auth_token', JSON.stringify(token));\n    }\n\n    if (localStorage.auth_token !== undefined) {\n        return (\n            <div className=\"login\">\n                <h1>Login</h1>\n                <label>Nom d'utilisateur\n                    <input type=\"text\" onChange={(e) => {\n                        setUsernameState(e.target.value);\n                    }}/>\n                </label>\n                <label>Mot de passe\n                    <input type=\"password\" onChange={(e) => {\n                        setPasswordState(e.target.value);\n                    }}/>\n                </label>\n                <button onClick={login}>Submit</button>\n            </div>\n        );\n    }\n}\n \nexport default withRouter(Login);","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/BlockedResList.js",["109"],"import auth from \"../auth\";\nimport {useEffect, useState} from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {Input, List, ListItem, ListItemText, ListSubheader, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\n\nfunction BlockedResList(){\n\n\n    const [blockedList, setBlockedList] = useState([])\n    useEffect(() => {\n        const getList = async () => {\n            const listFromAPi = await fetchList();\n            setBlockedList(listFromAPi)\n        };\n        getList()\n    }, [])\n    const fetchList = async () => {\n        const res = await fetch(\n            `${global.api}/api/admin/getResBlockedList`, {\n                method: 'POST',\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    Authorization: `Bearer ${auth.getToken()}`\n                }\n            });\n        return await res.json()\n    }\n\n    const deblockRes = (e) => {\n        console.log(e)\n        const name = e.target.name\n\n        const playload = {\n            r : name\n        }\n        fetch(\n            `${global.api}/api/admin/deblockRes`,{\n                method : 'POST',\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    Authorization: `Bearer ${auth.getToken()}`\n\n                },\n                body: JSON.stringify(playload),\n            }).then((res) => {\n\n            window.location.assign(\"http://localhost:3000/blockedRes\");\n        })\n    }\n\n\n\n    const stylesContainer = {\n        marginTop: '10%',\n    }\n    const btnStyleDes = {\n        backgroundColor : 'green',\n\n        borderRadius : '0%',\n\n        width : '10rem',\n        color : \"white\",\n        boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        fontWeight: \"500\",\n        lineHeight: \"1.75\",\n        letterSpacing: \"0.02857em\",\n\n\n\n    }\n    const btnStyleLink = {\n        backgroundColor : 'blue',\n        textAlign : 'center',\n        borderRadius : '0%',\n\n        width : '10rem',\n        color : \"white\",\n        boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        fontWeight: \"500\",\n        lineHeight: \"1.75\",\n        letterSpacing: \"0.02857em\",\n        marginRight : \"2rem\",\n        height : '2rem',\n        paddingTop : '0.45rem'\n\n\n\n    }\n\n    const dFlexAround = {\n        display : 'flex',\n        justifyContent : 'space-around'\n    }\n\n    const dContent = {\n\n    }\n\n    console.log(blockedList)\n    if (blockedList.length === 0) {\n        return (\n            <Container style={stylesContainer}>\n                <h1> Gestion des ressources bloquées</h1>\n                <Typography variant={'p'}>\n                    Aucune ressource n'a été bloquée pour le moment\n                </Typography>\n            </Container>\n\n        )\n    } else {\n        return (\n            <Container style={stylesContainer}>\n                <h1> Gestion des ressources bloquées</h1>\n                <List subheader={<ListSubheader> Liste des utilisateurs bloqués</ListSubheader>}>\n                    {blockedList.map((l) =>\n                        <ListItem style={dFlexAround}>\n\n                            <ListItemText primary={l.title} />\n                            <Link style={btnStyleLink}\n                                  key={l.id}\n                                //   params={{ role : \"admin\" }}\n                                //to={{pathname: \"category/resource\", state: {id: resource.id}}}\n                                  to={{\n                                      pathname: \"resource\",\n                                      state: {\n                                          option: 'deblock',\n\n                                      },\n                                      hash: `${l.id}`,\n                                  }}\n                            > VOIR </Link>\n\n                            <Input type={\"submit\"} onClick={(e) => deblockRes(e)} name={l.id}  style={btnStyleDes}  value={'DEBLOQUER'}/>\n                        </ListItem>\n                    )}\n                </List>\n            </Container>\n        )\n    }\n}\n\n\nexport default BlockedResList\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Navigation.js",["110","111","112","113"],"import React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport auth from '../auth';\nimport { withRouter } from 'react-router-dom';\nimport {getRole} from \"../App\";\n\n\n// Import from MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {getRoles} from \"@testing-library/dom\";\n\nconst Navigation = (props) => {\n\n// MaterialUI logic\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\n\n  const classes = useStyles();\n\n\n\nif (props.role === 'admin') {\n      return (\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                Aide\n              </Typography>\n                    <Typography component={Link} to=\"/home\" variant=\"h6\" className={classes.title}>\n                Panneau d'administration\n              </Typography>\n\n\n              <Button color=\"inherit\" onClick={() => {\n                auth.loggedout(() => {\n                  console.log('callback in test');\n                    window.location.assign(\"http://localhost:3000/login\");\n                });\n              }}>Logout</Button>\n            </Toolbar>\n          </AppBar>\n      )\n    } else if (props.role === 'user') {\n      return (\n\n          <>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                  <MenuIcon/>\n                </IconButton>\n                <Typography component={Link} to=\"/home\" variant=\"h6\" className={classes.title}>\n                  Accueil\n                </Typography>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                  Fil d'actualité\n                </Typography>\n                <Typography component={Link} to=\"/categories\" variant=\"h6\" className={classes.title}>\n                  Catégories\n                </Typography>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                  Publier\n                </Typography>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                  Aide\n                </Typography>\n\n                  <Button color=\"inherit\" onClick={() => {\n                      auth.loggedout(() => {\n                          console.log('callback in test');\n                          window.location.assign(\"http://localhost:3000/login\");\n                      });\n                  }}>Logout</Button>\n              </Toolbar>\n            </AppBar>\n          </>\n      );\n    }\n    else {\n      return (\n\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon/>\n              </IconButton>\n              <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\n              <Button color=\"inherit\" component={Link} to=\"/register\">S'inscrire</Button>\n            </Toolbar>\n          </AppBar>\n      )\n    }\n\n}\n\nexport default withRouter(Navigation);\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/BlockedUserList.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Home.js",["114"],"import React, {useEffect, useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport auth from \"../auth.js\";\n\nimport \"./Home.css\";\nimport {getRole, loaderStyle} from \"../App\";\nimport Loader from \"react-loader-spinner\";\nimport AdminDash from \"./AdminDash\";\n\n// Material UI import\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\n// Material UI import for Form Select\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n// Components import\nimport HomeCarousel from \"./HomeCarousel\";\n\n// CSS used inside the component\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\n\nfunction Home() {\n    const [resources, setResources] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState([]);\n\n    const classes = useStyles();\n\n\n    const handleChange = (event) => {\n        //setCategories(event.target.value);\n        setSelectedCategory(event.target.value);\n    };\n\n\n    useEffect(() => {\n        if (localStorage.getItem(\"auth_token\")) {\n            const getCategories = async () => {\n                const categoriesFromServer = await fetchCategories();\n                setCategories(categoriesFromServer);\n            };\n\n            const getResources = async () => {\n                const resourcesFromServer = await fetchResources();\n                // Careful, we use the reverse() method to have a desc order list\n                setResources(resourcesFromServer.reverse());\n            };\n\n            getCategories();\n\n            getResources();\n        }\n    }, []);\n\n    const fetchCategories = async () => {\n        const res = await fetch(`${global.api}/api/resources_category`, {\n            method: \"get\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${auth.getToken()}`,\n            },\n        });\n        return await res.json();\n    };\n\n    const fetchResources = async () => {\n        const res = await fetch(`${global.api}/api/resources/`, {\n            method: \"get\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${auth.getToken()}`,\n            },\n        });\n        const data = await res.json();\n        return data\n    };\n\n    const lastResources = resources.slice(0, 3);\n\n    const [roleTab, setRoleTab] = useState(null);\n    useEffect(() => {\n        getRole().then(({ roles }) => setRoleTab(roles));\n    }, []);\n\n    if (localStorage.auth_token !== undefined) {\n        if (roleTab === \"admin\") {\n            return (\n                <>\n                    <AdminDash></AdminDash>\n                </>\n            );\n        } else if (roleTab === \"user\") {\n            return (\n                <>\n                    <HomeCarousel />\n                    <Box my={3}>\n                        <Typography\n                            variant=\"h2\"\n                            component=\"h2\"\n                            style={{ textAlign: \"center\" }}\n                        >\n                            Dernières ressources\n                        </Typography>\n                    </Box>\n                    <Grid container spacing={5} alignContent=\"center\">\n                        {lastResources.map((resource) => (\n                            <Grid item xs={12} sm={3} key={resource.id}>\n                                <Card className={classes.root}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image=\"/static/images/cards/contemplative-reptile.jpg\"\n                                            title=\"Contemplative Reptile\"\n                                        />\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                {resource.title}\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body2\"\n                                                color=\"textSecondary\"\n                                                component=\"p\"\n                                            >\n                                                {resource.description}\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\">\n                                            <Link\n                                                key={resource.id}\n                                                to={{\n                                                    pathname: \"resource\",\n                                                    hash: `${resource.id}`,\n                                                }}\n                                            >\n                                                Consulter\n                                            </Link>\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                        <Grid item xs={12}>\n                            <Card variant=\"outlined\">\n                                <CardContent>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Choisissez une catégorie à consulter\n                                    </Typography>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-label\">\n                                            Catégorie\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={categories.name}\n                                            onChange={handleChange}\n                                        >\n                                            {categories.map((category) => {\n                                                return (\n                                                    <MenuItem value={category.name}>\n                                                        {category.name}\n                                                    </MenuItem>\n                                                );\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"small\">\n                                        <Link\n                                            to={{ pathname: \"category\", hash: `${selectedCategory}` }}\n                                        >\n                                            Voir la catégorie\n                                        </Link>\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </>\n            );\n        } else {\n            return (\n                <Loader\n                    style={loaderStyle}\n                    type=\"Puff\"\n                    color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n                    timeout={3000} //3 secs\n                />\n            );\n        }\n\n        // Fetch Resources\n    }\n}\n\nexport default Home;","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Register.js",["115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState, useRef } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\n//import { Container, Button, Form, FormGroup, Label, Input, FormText, Alert } from \"reactstrap\";\nimport \"./Register.css\";\n\n// Material UI Import\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\n// Material UI lab Imprt\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Register = (props) => {\n  const classes = useStyles();\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    watch,\n    control,\n  } = useForm();\n  const { isSubmitting, isSubmitted, isSubmitSuccessful } = formState;\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = (data) => {\n    console.log(data);\n    const payload = {\n      username: `${data.username}`,\n      first_name: `${data.firstName}`,\n      last_name: `${data.lastName}`,\n      email: `${data.email}`,\n      password: `${data.password}`,\n      retyped_password: `${data.retyped_password}`,\n    };\n\n    fetch(`${global.api}/register`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    }).then(() => {\n      props.history.push(\"Login\");\n    });\n  };\n\n  console.log(errors);\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"Prénom\"\n                  autoFocus\n                  inputRef={register({\n                    required: \"Entrez un prénom\",\n                    pattern: {\n                      value: /^([^0-9]*)$/,\n                      message: \"Les chiffes sont interdits\",\n                    },\n                  })}\n                />\n                {errors.firstName && (\n                  <Alert severity=\"warning\">{errors.firstName.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Nom\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  inputRef={register({\n                    required: \"Entrez un nom\",\n                    pattern: {\n                      value: /^([^0-9]*)$/,\n                      message: \"Les chiffes sont interdits\",\n                    },\n                  })}\n                />\n                {errors.lastName && (\n                  <Alert severity=\"warning\">{errors.lastName.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Nom Utilisateur\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  inputRef={register({\n                    required: \"Vous devez entrez votre nom d'utilisateur\",\n                  })}\n                />\n                {errors.username && (\n                  <Alert severity=\"warning\">{errors.username.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  inputRef={register({\n                    required: \"Email obligatoire\",\n                    pattern: {\n                      value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n                      message: \"Email invalide\",\n                    },\n                  })}\n                />\n                {errors.email && (\n                  <Alert severity=\"warning\">{errors.email.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Mot de passe\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  inputRef={register({ required: \"Mot de passe obligatoire\" })}\n                />\n                {errors.password && (\n                  <Alert severity=\"warning\">{errors.password.message}</Alert>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"retyped_password\"\n                  label=\"Confirmation mot de passe\"\n                  type=\"password\"\n                  id=\"retyped_password\"\n                  autoComplete=\"current-password\"\n                  inputRef={register({\n                    required: \"Confirmez votre mot de passe\",\n                    validate: (value) =>\n                      value === password.current ||\n                      \"Les mots de passe ne correspondent pas\",\n                  })}\n                />\n                {errors.retyped_password && (\n                  <Alert severity=\"warning\">\n                    {errors.retyped_password.message}\n                  </Alert>\n                )}\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Je m'inscris\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Déjà un compte ? Je me connecte\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/CategTools.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"import auth from \"../auth\";\nimport {Component, useEffect, useState} from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    CardActions,\n    FormControl, FormControlLabel,\n    FormHelperText,\n    Input,\n    InputLabel,\n    List,\n    ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText,\n    ListSubheader, Switch\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {useForm} from \"react-hook-form\";\n\nconst stylesContainer = {\n    marginTop: '10%',\n}\n\nconst mt4 =  {\n    marginTop: '4%'\n}\n\nconst dFlexAround = {\n    display: 'flex',\n    justifyContent: 'space-around'\n}\n\nconst submitBtn = {\n    backgroundColor : 'blue',\n    borderColor : 'white',\n    borderRadius : '0%',\n    borderStyle : 'solid',\n    width : '10rem',\n    color : \"white\",\n\n}\n\n\n\n\nfunction CategTools() {\n\n\n    const addCategory = (e) => {\n\n        const {name} = e.target.elements\n        const playload = {\n            name : name.value\n        }\n        fetch(`${global.api}/api/admin/addCategory`,{\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${auth.getToken()}`\n\n            },\n            body: JSON.stringify(playload),\n        }).then(() => {\n            console.log(playload)\n            //  window.location.href('window.location.assign(\"http://localhost:3000/categTools\");')\n        })\n    }\n\n    const displayBtn = {\n        textAlign: 'center',\n\n    }\n\n\n\n    const btnStyleDes = {\n        backgroundColor : 'green',\n\n        borderRadius : '0%',\n\n        width : '10rem',\n        color : \"white\",\n        boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        fontWeight: \"500\",\n        lineHeight: \"1.75\",\n        letterSpacing: \"0.02857em\",\n\n\n\n    }\n\n    const btnStyleAct = {\n        backgroundColor : 'red',\n        borderRadius : '0%',\n\n        width : '10rem',\n        color : \"white\",\n        boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        fontWeight: \"500\",\n        lineHeight: \"1.75\",\n        letterSpacing: \"0.02857em\",\n\n\n\n    }\n\n    const desactiveCateg = (idSe) =>{\n\n       // console.log(idSe.target.name)\n        const name = idSe.target.name\n\n       const playload = {\n           c : name\n       }\n       fetch(\n           `${global.api}/api/admin/delete_category`,{\n               method : 'POST',\n               headers: {\n                   Accept: \"application/json\",\n                   \"Content-type\": \"application/json\",\n                   Authorization: `Bearer ${auth.getToken()}`\n\n               },\n               body: JSON.stringify(playload),\n           }).then((res) => {\n\n        window.location.assign(\"http://localhost:3000/categTools\");\n       })\n    }\n\n    const activeCateg = (idSe) => {\n        const name = idSe.target.name\n\n        const playload = {\n            c : name\n        }\n        fetch(\n            `${global.api}/api/admin/active_category`,{\n                method : 'POST',\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    Authorization: `Bearer ${auth.getToken()}`\n\n                },\n                body: JSON.stringify(playload),\n            }).then((res) => {\n\n               window.location.assign(\"http://localhost:3000/categTools\");\n        })\n    }\n\n    const [categories, setCategories] = useState([])\n    useEffect(() => {\n        const getCategory = async () => {\n            const categoriesFromApi = await fetchCategories();\n            setCategories(categoriesFromApi);\n        };\n        getCategory();\n    }, [])\n    const fetchCategories = async () => {\n        const res = await fetch(`${global.api}/api/resources_category`, {\n            method: 'GET',\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${auth.getToken()}`,\n            },\n        });\n        return await res.json()\n    }\n    let status = \"\"\n    console.log(categories);\n    return (\n        <Container style={stylesContainer}>\n            <h1> Gestion des catégories</h1>\n            <h3 style={mt4}> Ajouter une catégories</h3>\n            <form  onSubmit={addCategory}>\n                <div style={dFlexAround}>\n                <Input name={'name'} type={'text'} placeholder={'Nom de la Catégorie'}/>\n                <Input style={submitBtn} type={\"submit\"} value={'ajouter'}/>\n                </div>\n            </form>\n            <div style={mt4}>\n                <h3> Supprimer, Activer des catégories </h3>\n                <List subheader={<ListSubheader>Liste des catégories</ListSubheader>}>\n                    {categories.map((c, i = 0) =>\n\n                    <ListItem>\n                        <ListItemText id=\"switch-list-label-wifi\" primary={c.name} />\n                        <ListItemSecondaryAction>\n\n                               {\n                                            (() => {\n                                                switch (c.status) {\n                                                    case true:   return <Input type={\"submit\"} onClick={(e) => desactiveCateg(e)} name={c.id}  style={btnStyleDes}  value={'DESACTIVER'}/>\n\n\n                                                    case false:      return <Input type={\"submit\"}  onClick={(e) => activeCateg(e)} name={c.id}  style={btnStyleAct} variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" value={'ACTIVER'}/>\n\n                                                }\n                                            })()}\n\n\n                        </ListItemSecondaryAction>\n\n                    </ListItem>\n                     )}\n                </List>\n            </div>\n        </Container>\n\n\n    )\n}\nexport default CategTools;\n\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Categories.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Category.js",["143"],"// This compenent contains the resources of ONE chosen category \nimport React from 'react';\nimport auth from '../auth';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\n// MaterialUI import\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n\n// MaterialUI Icon Import\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport ShareIcon from \"@material-ui/icons/Share\"\nimport ReportIcon from '@material-ui/icons/Report';\n\n// MaterialUI Lab \nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nfunction Category(props) {\n  // The category object that we get is used to get the correct resources\n  const { category } = props.location.state;\n\n  const [resources, setResources] = useState([]);\n  const [categoryTitle, setCategoryTitle] = useState([]);\n\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth_token\")) {\n      const getResources = async () => {\n        const resourcesFromServer = await fetchResources();\n        setResources(resourcesFromServer);\n      };\n\n      setCategoryTitle(category.name);\n\n      getResources();\n      \n    }\n  }, []);\n\n  // Fetch Resources\n  const fetchResources = async () => {\n    const res = await fetch(`${global.api}/api/resources/category/${category.name}`, {\n      method: \"get\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${auth.getToken()}`,\n      },\n    });\n    const data = await res.json();\n\n    return data;\n  };\n  \n  return (\n    \n    <>\n      <Typography variant=\"h2\" component=\"h1\" style={{margin:\"4% 0 4% 0\"}}>\n        Ressources pour : {categoryTitle}\n      </Typography>\n      <Grid container spacing={3}>\n          {typeof resources[0] !== \"string\" ?\n              resources.map((resource) => {\n                // To format the Date to dd/mm/YYYY\n                const date = new Date(resource.createdAt);\n                const day = date.getDate();\n                const month = (\"0\" + date.getMonth()).slice(-1) + 1;\n                const year = date.getFullYear();\n\n                return (\n                  <Grid item xs={12}>\n                    <Card variant=\"outlined\">\n                      <CardHeader\n                        title={resource.title}\n                        subheader={`${resource.author.username} - ${day}/${month}/${year}`}\n                        \n                      />\n                      <CardContent>\n                        {resource.description}\n                      </CardContent>\n                      <CardActions style={{justifyContent:'flex-end'}}>\n                        <IconButton aria-label=\"add to favorites\">\n                          <FavoriteIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"report\">\n                          <ReportIcon />\n                        </IconButton>\n                        <Button size=\"medium\" color=\"primary\">\n                          <Link\n                            key={resource.id}\n                            //to={{pathname: \"category/resource\", state: {id: resource.id}}}\n                            to={{pathname: \"category/resource\", hash:`${resource.id}`}}\n                          >\n                            Consulter\n                          </Link> \n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n                      \n              })\n              : <Alert severity=\"info\">\n                  <AlertTitle>Attention</AlertTitle>\n                  Cette catégorie n'a pas encore de ressource\n                </Alert>\n            }\n      </Grid>\n    </>\n  );\n}\n\nexport default Category\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Resource.js",["144","145"],"// Component containing a chosen ressource\nimport React, {useEffect, useState} from 'react'\nimport \"./Resource\"\nimport auth from '../auth'\nimport userlib from '../userLibraryFunctions'\n\n// MaterialUI import\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\n\n// MaterialUI Icon Import\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport ShareIcon from \"@material-ui/icons/Share\"\nimport ReportIcon from '@material-ui/icons/Report';\nimport {Input, ListItem} from \"@material-ui/core\";\n\nfunction Resource(props) {\n\n    //const {id}  = props.location.state;\n    const id = props.location.hash.substring(1);\n        console.log(props.location.state);\n    const [resource, setResource] = useState([]);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"auth_token\")) {\n            const getResource = async () => {\n                const resourceFromServer = await fetchResource();\n                setResource(resourceFromServer);\n            };\n\n            getResource();\n\n        }\n    }, []);\n\n    // Fetch One Ressource\n    const fetchResource = async () => {\n        const res = await fetch(`${global.api}/api/resources/${id}`, {\n            method: \"get\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${auth.getToken()}`,\n            },\n        })\n        return await res.json();\n    }\n    if (props.location.state.role !== 'admin'){\n\n    return (\n        <>\n            <h1>This is only ONE resource.</h1>\n            {resource.map((resource) => {\n                // To format the Date to dd/mm/YYYY\n                const date = new Date(resource.createdAt);\n                const day = date.getDate();\n                const month = (\"0\" + date.getMonth()).slice(-1) + 1;\n                const year = date.getFullYear();\n                return (\n                    <Card variant=\"outlined\">\n                        <CardHeader\n                            key={resource.id}\n                            title={resource.title}\n                            subheader={`${resource.author.username} - ${day}/${month}/${year}`}\n                        />\n                        <CardContent>{resource.description}</CardContent>\n                        <CardActions style={{ justifyContent: \"flex-end\" }}>\n                            <IconButton aria-label=\"add to favorites\">\n                                <FavoriteIcon\n                                    onClick={() => {\n                                        userlib.saveInLibrary(resource.id);\n                                    }}\n                                />\n                            </IconButton>\n                            <IconButton aria-label=\"share\">\n                                <ShareIcon />\n                            </IconButton>\n                            <IconButton aria-label=\"report\">\n                                <ReportIcon />\n                            </IconButton>\n                        </CardActions>\n                    </Card>\n                );\n            })}\n        </>\n    ) } else if (props.location.state.option === \"deblock\"){\n        const btnStyleDes = {\n            backgroundColor : 'green',\n\n            borderRadius : '0%',\n\n            width : '10rem',\n            color : \"white\",\n            boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n            fontWeight: \"500\",\n            lineHeight: \"1.75\",\n            letterSpacing: \"0.02857em\",\n\n\n\n        }\n\n        const cardBtn = {\n            display : \"flex\",\n            justifyContent : \"flex-end\",\n            marginBottom : '2rem',\n            marginRight : '1rem'\n        }\n\n        const deblockRes = (e) => {\n            console.log(e)\n            const name = e.target.name\n\n            const playload = {\n                r : name\n            }\n            fetch(\n                `${global.api}/api/admin/deblockRes`,{\n                    method : 'POST',\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${auth.getToken()}`\n\n                    },\n                    body: JSON.stringify(playload),\n                }).then((res) => {\n\n                window.location.assign(\"http://localhost:3000/blockedRes\");\n            })\n        }\n        return (\n\n            <>\n                <h1>This is only ONE resource.</h1>\n                {resource.map((resource) => {\n                    // To format the Date to dd/mm/YYYY\n                    const date = new Date(resource.createdAt);\n                    const day = date.getDate();\n                    const month = (\"0\" + date.getMonth()).slice(-1) + 1;\n                    const year = date.getFullYear();\n                    return (\n                        <Card variant=\"outlined\">\n                            <CardHeader\n                                key={resource.id}\n                                title={resource.title}\n                                subheader={`${resource.author.username} - ${day}/${month}/${year}`}\n                            />\n                            <CardContent>{resource.description}</CardContent>\n                            <div style={cardBtn}>\n                                <Input type={\"submit\"} onClick={(e) => deblockRes(e)} name={resource.id}  style={btnStyleDes}  value={'DEBLOQUER'}/>\n                            </div>\n                        </Card>\n                    );\n                })}\n            </>\n        )\n\n\n    } else {\n        const btnStyleBlock = {\n            backgroundColor : 'red',\n\n            borderRadius : '0%',\n\n            width : '10rem',\n            color : \"white\",\n            boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n            fontWeight: \"500\",\n            lineHeight: \"1.75\",\n            letterSpacing: \"0.02857em\",\n\n        }\n        const btnStyleClose = {\n            backgroundColor : '#FFB833',\n\n            borderRadius : '0%',\n\n            width : '10rem',\n            color : \"white\",\n            boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n            fontWeight: \"500\",\n            marginLeft : \"2rem\",\n            lineHeight: \"1.75\",\n            letterSpacing: \"0.02857em\",\n\n        }\n\n        const cardBtn = {\n            display : \"flex\",\n            justifyContent : \"flex-end\",\n            marginBottom : '2rem',\n            marginRight : '1rem'\n        }\n\n        const blockRes = (e) => {\n\n            const name = e.target.name\n\n            const playload = {\n                r : name\n\n            }\n            fetch(\n                `${global.api}/api/admin/closeandblockres`,{\n                    method : 'POST',\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${auth.getToken()}`\n\n                    },\n                    body: JSON.stringify(playload),\n                }).then((res) => {\n\n                window.location.assign(\"http://localhost:3000/repResList\");\n            })\n        }\n\n        const closeReport = (e) => {\n\n            const name = e.target.name\n\n            const playload = {\n                r : name\n\n            }\n            fetch(\n                `${global.api}/api/admin/closeReport`,{\n                    method : 'POST',\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${auth.getToken()}`\n\n                    },\n                    body: JSON.stringify(playload),\n                }).then((res) => {\n\n                window.location.assign(\"http://localhost:3000/repResList\");\n            })\n        }\n        return (\n            <>\n                <h1>This is only ONE resource.</h1>\n                {resource.map((resource) => {\n                    // To format the Date to dd/mm/YYYY\n                    const date = new Date(resource.createdAt);\n                    const day = date.getDate();\n                    const month = (\"0\" + date.getMonth()).slice(-1) + 1;\n                    const year = date.getFullYear();\n                    return (\n                        <Card variant=\"outlined\">\n                            <CardHeader\n                                key={resource.id}\n                                title={resource.title}\n                                subheader={`${resource.author.username} - ${day}/${month}/${year}`}\n                            />\n                            <CardContent>{resource.description}</CardContent>\n                            <div style={cardBtn}>\n                            <Input onClick={(e) => blockRes(e)}  name={props.location.state.rep}  type={\"submit\"}  style={btnStyleBlock}  value={'BLOQUER'}/>\n\n                            <Input onClick={(e) => closeReport(e)} name={props.location.state.rep}  type={\"submit\"} style={btnStyleClose}  value={'CLOTURER'}/>\n                            </div>\n                            </Card>\n                    );\n                })}\n            </>\n        )\n    };\n}\n\nexport default Resource","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/global.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/HomeCarousel.js",["146","147"],"import React from 'react'\n\n// Material UI import\nimport Paper from \"@material-ui/core/Paper\";\n\n// Material UI Carousel library import\nimport Carousel from \"react-material-ui-carousel\";\n\nfunction HomeCarousel(props) {\n    \n    var items = [\n        {\n            name: \"Bienvenu sur Ressource Relationnelle\",\n            description: \"Une plateforme Citoyenne\",\n            image: \"https://picsum.photos/1400/400\"\n        },\n        {\n            name: \"Partagez des ressources\",\n            description: \"Renforcez la solidatrité autour de soi\",\n            image: \"https://picsum.photos/1400/400\"\n        },\n        {\n            name: \"En apprendre plus\",\n            description: \"Augmentez ses compétences\",\n            image: \"https://picsum.photos/1400/400\"\n        }\n    ]\n\n    return (\n        <Carousel>\n            {\n                items.map( (item, i) => <Item key={i} item={item} /> )\n            }\n        </Carousel>\n    )\n}\n\n// This determines how the carousel will display\nfunction Item(props)\n{\n    return (\n      <Paper>\n        <div\n          style={{\n            backgroundImage: \"url(\" + `${props.item.image}` + \")\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n            height: \"400px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <h2>{props.item.name}</h2>\n          <p>{props.item.description}</p>\n        </div>\n      </Paper>\n    );\n}\n\nexport default HomeCarousel\n","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/AdminDash.js",["148","149","150"],"import Container  from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {CardActions, Divider} from \"@material-ui/core\";\n\n\nconst stylesContainer = {\n    marginTop: '10%',\n}\nconst dFlexAroundmt5 = {\n    display : 'flex',\n    justifyContent : 'space-around',\n    marginTop: '5%'\n}\n\nconst dFlexAround = {\n    display : 'flex',\n    justifyContent : 'space-around',\n}\n\nconst dFlexCenter = {\n    display : 'flex',\n    justifyContent : 'center'\n}\n\nconst btnStyle = {\n    backgroundColor : 'blue',\n    borderColor : 'white',\n    borderRadius : '0%',\n    borderStyle : 'solid',\n\n\n\n}\n\nconst displayBtn = {\n    textAlign: 'center',\n\n}\n\nconst mt5 = {\n    marginTop: '5%'\n}\n\nconst txtCenter = {\n    textAlign : 'center',\n}\n\nconst card = {\n    width : '41%',\n    height : '120px',\n}\n\nconst AdminDash = (props) => {\n    return (\n       <Container style={stylesContainer}>\n       <h1> Espace Adminsitration</h1>\n\n           <div style={dFlexAround}>\n               <Card style={card}>\n                   <CardContent>\n                   <Typography style={txtCenter} variant=\"p\" component=\"p\">\n                      Consultez les signalements des ressources\n                   </Typography>\n                       <div style={displayBtn}>\n                           <CardActions style={dFlexCenter}>\n\n                           <Button style={btnStyle} variant=\"contained\" color=\"primary\" href=\"/repResList\">\n                               Consulter\n                           </Button>\n\n                       </CardActions>\n                       </div>\n               </CardContent>\n               </Card>\n               <Card style={card}>\n                   <CardContent>\n                       <Typography style={txtCenter} variant=\"p\" component=\"p\">\n                           Consultez les ressources bloquées\n                       </Typography>\n                       <div style={displayBtn}>\n                       <CardActions style={dFlexCenter}>\n\n                           <Button style={btnStyle} variant=\"contained\" color=\"primary\" href=\"/blockedRes\">\n                               Consulter\n                           </Button>\n\n                       </CardActions>\n                       </div>\n                   </CardContent>\n               </Card>\n           </div>\n           <div style={dFlexAroundmt5}>\n               <Card style={card}>\n                   <CardContent>\n                       <Typography style={txtCenter} variant=\"p\" component=\"p\">\n                           Consultez les utilisateurs signalés\n                       </Typography>\n                       <div style={displayBtn}>\n                           <CardActions style={dFlexCenter}>\n\n                               <Button style={btnStyle} variant=\"contained\" color=\"primary\" href=\"/repUserList\">\n                                   Consulter\n                               </Button>\n\n                           </CardActions>\n                       </div>\n                   </CardContent>\n               </Card>\n               <Card style={card}>\n                   <CardContent>\n                       <Typography style={txtCenter} variant=\"p\" component=\"p\">\n                           Consultez les utilisateurs bloqués\n                       </Typography>\n                       <div style={displayBtn}>\n                           <CardActions style={dFlexCenter}>\n\n                               <Button style={btnStyle} variant=\"contained\" color=\"primary\" href=\"/blockedUser\">\n                                   Consulter\n                               </Button>\n\n                           </CardActions>\n                       </div>\n                   </CardContent>\n               </Card>\n           </div>\n           <div style= {dFlexAroundmt5}>\n               <Card style={card}>\n                   <CardContent>\n                       <Typography style={txtCenter} variant=\"p\" component=\"p\">\n                           Consultez les Avertissements\n                       </Typography>\n                       <div style={displayBtn}>\n                           <CardActions style={dFlexCenter}>\n\n                               <Button style={btnStyle} variant=\"contained\" color=\"primary\" href=\"/warnList\">\n                                   Consulter\n                               </Button>\n\n                           </CardActions>\n                       </div>\n                   </CardContent>\n               </Card>\n               <Card style={card}>\n                   <CardContent>\n                       <Typography style={txtCenter} variant=\"p\" component=\"p\">\n                           Gestion des catégories\n                       </Typography>\n                       <div style={displayBtn}>\n                           <CardActions style={dFlexCenter}>\n\n                               <Button style={btnStyle} variant=\"contained\" color=\"primary\" href=\"/categTools\">\n                                   Consulter\n                               </Button>\n\n                           </CardActions>\n                       </div>\n                   </CardContent>\n               </Card>\n           </div>\n       </Container>\n    )\n}\n\nexport default AdminDash","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/userLibraryFunctions.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/ResRepList.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/UserRepList.js",[],"/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/WarnList.js",["151","152","153"],"import {useEffect, useState} from \"react\";\nimport auth from \"../auth\";\nimport Container from \"@material-ui/core/Container\";\nimport {Input, List, ListItem, ListItemText, ListSubheader, Typography} from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport Moment from 'moment'\n\nfunction WarnList () {\n    Moment.locale('fr');\n    const [warnList, setWarnList] = useState([])\n    useEffect(\n        () => {\n            const getList = async () => {\n                const listFromApi = await fetchList();\n                setWarnList(listFromApi)\n            };\n            getList()\n        }, [])\n    const stylesContainer = {\n        marginTop: '10%',\n    }\n    const btnStyleBlock = {\n        backgroundColor : 'red',\n\n        borderRadius : '0%',\n\n        width : '10rem',\n        color : \"white\",\n        boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        fontWeight: \"500\",\n        lineHeight: \"1.75\",\n        letterSpacing: \"0.02857em\",\n        marginLeft: \"2rem\",\n\n    }\n\n    const end = {\n        textAlign: 'end'\n    }\n    const btnStyleClose = {\n        backgroundColor : '#FFB833',\n\n        borderRadius : '0%',\n\n        width : '10rem',\n        color : \"white\",\n        boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        fontWeight: \"500\",\n        marginLeft : \"2rem\",\n        lineHeight: \"1.75\",\n        letterSpacing: \"0.02857em\",\n\n    }\n    const btnStyleLink = {\n        backgroundColor : 'blue',\n        textAlign : 'center',\n        borderRadius : '0%',\n\n        width : '10rem',\n        color : \"white\",\n        boxShadow : \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        fontWeight: \"500\",\n        lineHeight: \"1.75\",\n        letterSpacing: \"0.02857em\",\n        marginRight : \"2rem\",\n        marginLeft : \"2rem\",\n        height : '2rem',\n        paddingTop : '0.45rem'\n\n\n\n    }\n    const fetchList = async () => {\n        const res = await fetch(\n            `${global.api}/api/admin/getWarnList`, {\n                method: 'POST',\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    Authorization: `Bearer ${auth.getToken()}`\n                }\n            }\n        )\n        return await res.json()\n    }\n\n    const delWarn = (e) => {\n        const name = e.target.name\n\n        const playload = {\n            w : name\n        }\n        fetch(\n            `${global.api}/api/admin/delWarn`,{\n                method : 'POST',\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    Authorization: `Bearer ${auth.getToken()}`\n\n                },\n                body: JSON.stringify(playload),\n            }).then((res) => {\n\n            window.location.assign(\"http://localhost:3000/warnList\");\n        })\n    }\n\n    console.log(warnList);\n    if (warnList.length > 0){\n    return (\n        <Container style={stylesContainer}>\n            <h1> Gestion des averissements</h1>\n            <List subheader={<ListSubheader> Liste des Avertissements </ListSubheader>}>\n                {warnList.map((l) =>\n                    <ListItem>\n                        <ListItemText primary={l.userWarned.username} />\n                        <ListItemText style={end} primary={\"date du signalement: \"+Moment(l.createdAt).format('L')} />\n\n                        <Input name={l.id} type={\"submit\"} onClick={(e) => delWarn(e)}  style={btnStyleBlock}  value={'SUPPRIMER'}/>\n\n\n                    </ListItem>\n\n                )}\n            </List>\n        </Container>\n    ) } else {\n        return(\n            <Container style={stylesContainer}>\n                <h1> Gestion des averissements</h1>\n                <Typography variant={'p'}>\n                    Aucun avertissement pour le moment\n                </Typography>\n            </Container>\n        )\n    }\n\n}\nexport default WarnList","/home/maxime/Bureau/cubes/RIL-Ressources/ressource_relationelle/src/components/Profile.js",["154","155","156","157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":167,"column":10,"nodeType":"164","messageId":"165","endLine":167,"endColumn":18},{"ruleId":"162","severity":1,"message":"166","line":9,"column":13,"nodeType":"164","messageId":"165","endLine":9,"endColumn":25},{"ruleId":"162","severity":1,"message":"167","line":2,"column":22,"nodeType":"164","messageId":"165","endLine":2,"endColumn":30},{"ruleId":"162","severity":1,"message":"168","line":6,"column":9,"nodeType":"164","messageId":"165","endLine":6,"endColumn":16},{"ruleId":"162","severity":1,"message":"169","line":99,"column":11,"nodeType":"164","messageId":"165","endLine":99,"endColumn":19},{"ruleId":"162","severity":1,"message":"170","line":1,"column":16,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"171","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":35},{"ruleId":"162","severity":1,"message":"168","line":5,"column":9,"nodeType":"164","messageId":"165","endLine":5,"endColumn":16},{"ruleId":"162","severity":1,"message":"172","line":16,"column":9,"nodeType":"164","messageId":"165","endLine":16,"endColumn":17},{"ruleId":"162","severity":1,"message":"173","line":24,"column":8,"nodeType":"164","messageId":"165","endLine":24,"endColumn":22},{"ruleId":"162","severity":1,"message":"171","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"174","line":2,"column":19,"nodeType":"164","messageId":"165","endLine":2,"endColumn":29},{"ruleId":"162","severity":1,"message":"167","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":18},{"ruleId":"162","severity":1,"message":"175","line":12,"column":8,"nodeType":"164","messageId":"165","endLine":12,"endColumn":24},{"ruleId":"162","severity":1,"message":"176","line":13,"column":8,"nodeType":"164","messageId":"165","endLine":13,"endColumn":16},{"ruleId":"162","severity":1,"message":"177","line":16,"column":8,"nodeType":"164","messageId":"165","endLine":16,"endColumn":11},{"ruleId":"162","severity":1,"message":"178","line":53,"column":5,"nodeType":"164","messageId":"165","endLine":53,"endColumn":13},{"ruleId":"162","severity":1,"message":"179","line":55,"column":5,"nodeType":"164","messageId":"165","endLine":55,"endColumn":12},{"ruleId":"162","severity":1,"message":"180","line":57,"column":11,"nodeType":"164","messageId":"165","endLine":57,"endColumn":23},{"ruleId":"162","severity":1,"message":"181","line":57,"column":25,"nodeType":"164","messageId":"165","endLine":57,"endColumn":36},{"ruleId":"162","severity":1,"message":"182","line":57,"column":38,"nodeType":"164","messageId":"165","endLine":57,"endColumn":56},{"ruleId":"183","severity":1,"message":"184","line":176,"column":36,"nodeType":"185","messageId":"186","endLine":176,"endColumn":37,"suggestions":"187"},{"ruleId":"162","severity":1,"message":"188","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":18},{"ruleId":"162","severity":1,"message":"189","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":12},{"ruleId":"162","severity":1,"message":"190","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":19},{"ruleId":"162","severity":1,"message":"191","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":18},{"ruleId":"162","severity":1,"message":"192","line":8,"column":5,"nodeType":"164","messageId":"165","endLine":8,"endColumn":16},{"ruleId":"162","severity":1,"message":"193","line":9,"column":5,"nodeType":"164","messageId":"165","endLine":9,"endColumn":16},{"ruleId":"162","severity":1,"message":"175","line":9,"column":18,"nodeType":"164","messageId":"165","endLine":9,"endColumn":34},{"ruleId":"162","severity":1,"message":"173","line":10,"column":5,"nodeType":"164","messageId":"165","endLine":10,"endColumn":19},{"ruleId":"162","severity":1,"message":"194","line":12,"column":5,"nodeType":"164","messageId":"165","endLine":12,"endColumn":15},{"ruleId":"162","severity":1,"message":"195","line":14,"column":15,"nodeType":"164","messageId":"165","endLine":14,"endColumn":27},{"ruleId":"162","severity":1,"message":"196","line":15,"column":20,"nodeType":"164","messageId":"165","endLine":15,"endColumn":26},{"ruleId":"162","severity":1,"message":"197","line":17,"column":8,"nodeType":"164","messageId":"165","endLine":17,"endColumn":14},{"ruleId":"162","severity":1,"message":"198","line":18,"column":9,"nodeType":"164","messageId":"165","endLine":18,"endColumn":16},{"ruleId":"162","severity":1,"message":"199","line":70,"column":11,"nodeType":"164","messageId":"165","endLine":70,"endColumn":21},{"ruleId":"162","severity":1,"message":"200","line":173,"column":9,"nodeType":"164","messageId":"165","endLine":173,"endColumn":15},{"ruleId":"201","severity":1,"message":"202","line":196,"column":49,"nodeType":"203","messageId":"204","endLine":202,"endColumn":50},{"ruleId":"205","severity":1,"message":"206","line":46,"column":6,"nodeType":"207","endLine":46,"endColumn":8,"suggestions":"208"},{"ruleId":"162","severity":1,"message":"209","line":19,"column":16,"nodeType":"164","messageId":"165","endLine":19,"endColumn":24},{"ruleId":"205","severity":1,"message":"210","line":38,"column":8,"nodeType":"207","endLine":38,"endColumn":10,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":45,"column":45,"nodeType":"214","messageId":"215","endLine":45,"endColumn":46},{"ruleId":"212","severity":1,"message":"213","line":45,"column":69,"nodeType":"214","messageId":"215","endLine":45,"endColumn":70},{"ruleId":"162","severity":1,"message":"177","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":11},{"ruleId":"162","severity":1,"message":"216","line":7,"column":22,"nodeType":"164","messageId":"165","endLine":7,"endColumn":29},{"ruleId":"162","severity":1,"message":"217","line":44,"column":7,"nodeType":"164","messageId":"165","endLine":44,"endColumn":10},{"ruleId":"162","severity":1,"message":"218","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":12},{"ruleId":"162","severity":1,"message":"219","line":40,"column":11,"nodeType":"164","messageId":"165","endLine":40,"endColumn":24},{"ruleId":"162","severity":1,"message":"220","line":54,"column":11,"nodeType":"164","messageId":"165","endLine":54,"endColumn":23},{"ruleId":"162","severity":1,"message":"221","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":20},{"ruleId":"162","severity":1,"message":"222","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":15},{"ruleId":"205","severity":1,"message":"223","line":46,"column":8,"nodeType":"207","endLine":46,"endColumn":10,"suggestions":"224"},{"ruleId":"205","severity":1,"message":"225","line":67,"column":8,"nodeType":"207","endLine":67,"endColumn":10,"suggestions":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'decodedToken' is assigned a value but never used.","'Redirect' is defined but never used.","'getRole' is defined but never used.","'dContent' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'getRoles' is defined but never used.","'FormHelperText' is defined but never used.","'Controller' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'setError' is assigned a value but never used.","'control' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'isSubmitSuccessful' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["229","230"],"'Component' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'CardActions' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'ListItemIcon' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'useForm' is defined but never used.","'displayBtn' is assigned a value but never used.","'status' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category.name' and 'fetchResources'. Either include them or remove the dependency array.","ArrayExpression",["231"],"'ListItem' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchResource'. Either include it or remove the dependency array.",["232"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Divider' is defined but never used.","'mt5' is assigned a value but never used.","'Link' is defined but never used.","'btnStyleClose' is assigned a value but never used.","'btnStyleLink' is assigned a value but never used.","'FavoriteIcon' is defined but never used.","'userlib' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'fetchRes'. Either include it or remove the dependency array.",["234"],"no-global-assign","no-unsafe-negation",{"messageId":"235","fix":"236","desc":"237"},{"messageId":"238","fix":"239","desc":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"removeEscape",{"range":"249","text":"250"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"251","text":"252"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [category.name, fetchResources]",{"range":"253","text":"254"},"Update the dependencies array to be: [fetchResource]",{"range":"255","text":"256"},"Update the dependencies array to be: [fetchUser]",{"range":"257","text":"258"},"Update the dependencies array to be: [fetchRes]",{"range":"259","text":"260"},[5467,5468],"",[5467,5467],"\\",[1453,1455],"[category.name, fetchResources]",[1214,1216],"[fetchResource]",[1412,1414],"[fetchUser]",[2052,2054],"[fetchRes]"]